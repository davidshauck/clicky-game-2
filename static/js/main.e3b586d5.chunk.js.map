{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Counter/index.js","components/Message/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","occupation","location","onClick","clickImage","id","Wrapper","children","Title","Counter","Message","App","state","friends","count","clickMessage","index","findIndex","friend","clicked","setState","sort","Math","random","find","newArray","parseInt","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"88FA6BeA,MA1Bf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,SAEnC,yBAAKJ,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMG,MAEhC,4BACE,+CADF,IACgCH,EAAMM,YAEtC,4BACE,6CADF,IAC8BN,EAAMO,YAIxC,0BAAMC,QAAS,kBAAMR,EAAMS,WAAWT,EAAMU,KAAKT,UAAU,UAA3D,kB,MCfSU,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMY,W,MCGvBE,MAJf,SAAiBd,GACf,OAAO,wBAAIC,UAAU,WAAWD,EAAMY,W,MCGzBG,MAJf,SAAiBf,GACf,OAAO,wBAAIC,UAAU,WAAWD,EAAMY,W,OC6DzBI,E,2MAvDbC,MAAQ,CACNC,UACAC,MAAO,EACPC,aAAc,kE,EAGhBX,WAAa,SAAAC,GAEX,IAAIW,EAAQ,EAAKJ,MAAMC,QAAQI,WAAU,SAAAC,GAAM,OAAIA,EAAOb,KAAOA,KAEjE,GAAI,EAAKO,MAAMC,QAAQG,GAAOG,QAC5B,EAAKC,SAAS,CAAEL,aAAc,kDAC9B,EAAKK,SAAS,CAAEN,MAAO,IACvB,EAAKM,SAAS,QACT,CAEP,IAAMP,EAAU,EAAKD,MAAMC,QAAQQ,MAAK,kBAAMC,KAAKC,SAAW,MAE9D,EAAKX,MAAMC,QAAQW,MAAK,SAAAC,GAAQ,OAAIA,EAASpB,KAAOA,KAAIc,SAAU,EAElE,EAAKC,SAAS,CAAEP,YAEhB,EAAKO,SAAS,CAAEN,MAAO,EAAKF,MAAME,MAAQ,IACpC,EAAKF,MAAME,OAASY,SAAS,MAC/B,EAAKN,SAAS,CAAEL,aAAc,aAC9B,EAAKK,SAAS,CAAEN,MAAO,IACvB,EAAKM,SAAS,O,wEAMV,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,oBACA,kBAAC,EAAD,eAAiBO,KAAKf,MAAME,OAC5B,kBAAC,EAAD,KAAUa,KAAKf,MAAMG,cACpBY,KAAKf,MAAMC,QAAQe,KAAI,SAAAV,GAAM,OAC5B,kBAAC,EAAD,CACEH,aAAc,EAAKA,aACnBX,WAAY,EAAKA,WACjBC,GAAIa,EAAOb,GACXwB,IAAKX,EAAOb,GACZP,KAAMoB,EAAOpB,KACbE,MAAOkB,EAAOlB,MACdC,WAAYiB,EAAOjB,WACnBC,SAAUgB,EAAOhB,mB,GAjDX4B,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e3b586d5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.clickImage(props.id)} className=\"remove\">\n        ùòÖ\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Counter(props) {\n  return <h2 className=\"counter\">{props.children}</h2>\n}\n\nexport default Counter;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Message(props) {\n  return <h3 className=\"message\">{props.children}</h3>\n}\n\nexport default Message;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Counter from \"./components/Counter\";\nimport Message from \"./components/Message\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    count: 0,\n    clickMessage: \"Click on every image once without clicking the same one twice.\"\n  };\n  // function for image being clicked\n  clickImage = id => {\n    // create a variable for the index of the clicked image\n    let index = this.state.friends.findIndex(friend => friend.id === id);\n    // if the clicked image's clicked value is false...\n    if (this.state.friends[index].clicked) {\n      this.setState({ clickMessage: \"Sorry, that image has been clicked, you lose!\" });\n      this.setState({ count: 0 });\n      this.setState({})\n    } else {\n    // ...randomize the array\n    const friends = this.state.friends.sort(() => Math.random() - 0.5 );\n    // change the clicked image's clicked value to true\n    this.state.friends.find(newArray => newArray.id === id).clicked = true;\n    // update the state of friends\n    this.setState({ friends });\n    // update the state of the count\n    this.setState({ count: this.state.count + 1 });\n      if (this.state.count == parseInt(11)) {\n        this.setState({ clickMessage: \"You win!\" })\n        this.setState({ count: 0 })\n        this.setState({})\n      }\n    }\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n        <Counter>Score: {this.state.count}</Counter>\n        <Message>{this.state.clickMessage}</Message>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickMessage={this.clickMessage}\n            clickImage={this.clickImage}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}