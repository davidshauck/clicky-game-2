{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Counter/index.js","components/Message/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","occupation","location","onClick","clickImage","id","Wrapper","children","Title","Counter","Message","App","state","friends","count","clickMessage","setState","index","findIndex","friend","clicked","map","newArray","forEach","friendsArray","console","log","sort","Math","random","find","parseInt","this","key","Component","ReactDOM","render","document","getElementById"],"mappings":"88FA6BeA,MA1Bf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,SAEnC,yBAAKJ,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMG,MAEhC,4BACE,+CADF,IACgCH,EAAMM,YAEtC,4BACE,6CADF,IAC8BN,EAAMO,YAIxC,0BAAMC,QAAS,kBAAMR,EAAMS,WAAWT,EAAMU,KAAKT,UAAU,UAA3D,kB,MCfSU,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMY,W,MCGvBE,MAJf,SAAiBd,GACf,OAAO,wBAAIC,UAAU,WAAWD,EAAMY,W,MCGzBG,MAJf,SAAiBf,GACf,OAAO,wBAAIC,UAAU,WAAWD,EAAMY,W,OC0EzBI,E,2MApEbC,MAAQ,CACNC,UACAC,MAAO,EACPC,aAAc,kE,EAGhBX,WAAa,SAAAC,GACX,EAAKW,SAAS,CAAED,aAAc,mEAE9B,IAAIE,EAAQ,EAAKL,MAAMC,QAAQK,WAAU,SAAAC,GAAM,OAAIA,EAAOd,KAAOA,KAEjE,GAAI,EAAKO,MAAMC,QAAQI,GAAOG,QAC5B,EAAKJ,SAAS,CAAED,aAAc,gFAC9B,EAAKC,SAAS,CAAEF,MAAO,IACvB,EAAKF,MAAMC,QAAQQ,KAAI,SAAAC,GAAQ,OAAIA,EAASjB,KAAOA,KAAIe,SAAU,EACjE,EAAKR,MAAMC,QAAQU,SAAQ,SAASC,GAClCA,EAAaJ,SAAU,EACvBK,QAAQC,IAAIF,MAEdC,QAAQC,IAAI,EAAKd,MAAMC,SACvB,EAAKG,SAAS,QACP,CAEP,IAAMH,EAAU,EAAKD,MAAMC,QAAQc,MAAK,kBAAMC,KAAKC,SAAW,MAE9D,EAAKjB,MAAMC,QAAQiB,MAAK,SAAAR,GAAQ,OAAIA,EAASjB,KAAOA,KAAIe,SAAU,EAElE,EAAKJ,SAAS,CAAEH,YAEhB,EAAKG,SAAS,CAAEF,MAAO,EAAKF,MAAME,MAAQ,IACpC,EAAKF,MAAME,QAAUiB,SAAS,MAChC,EAAKf,SAAS,CAAED,aAAc,aAC9B,EAAKC,SAAS,CAAEF,MAAO,IACvB,EAAKE,SAAS,IACd,EAAKJ,MAAMC,QAAQU,SAAQ,SAASC,GAClCA,EAAaJ,SAAU,EACvBK,QAAQC,IAAIF,MAEdC,QAAQC,IAAI,EAAKd,MAAMC,Y,wEAOrB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,oBACA,kBAAC,EAAD,eAAiBmB,KAAKpB,MAAME,OAC5B,kBAAC,EAAD,KAAUkB,KAAKpB,MAAMG,cACpBiB,KAAKpB,MAAMC,QAAQQ,KAAI,SAAAF,GAAM,OAC5B,kBAAC,EAAD,CACEJ,aAAc,EAAKA,aACnBX,WAAY,EAAKA,WACjBC,GAAIc,EAAOd,GACX4B,IAAKd,EAAOd,GACZP,KAAMqB,EAAOrB,KACbE,MAAOmB,EAAOnB,MACdC,WAAYkB,EAAOlB,WACnBC,SAAUiB,EAAOjB,mB,GA9DXgC,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1ef37c68.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.clickImage(props.id)} className=\"remove\">\n        ùòÖ\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Counter(props) {\n  return <h2 className=\"counter\">{props.children}</h2>\n}\n\nexport default Counter;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Message(props) {\n  return <h3 className=\"message\">{props.children}</h3>\n}\n\nexport default Message;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Counter from \"./components/Counter\";\nimport Message from \"./components/Message\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    count: 0,\n    clickMessage: \"Click on every image once without clicking the same one twice.\"\n  };\n  // function for image being clicked\n  clickImage = id => {\n    this.setState({ clickMessage: \"Click on every image once without clicking the same one twice.\" })\n    // create a variable for the index of the clicked image\n    let index = this.state.friends.findIndex(friend => friend.id === id);\n    // if the clicked image's clicked value is false...\n    if (this.state.friends[index].clicked) {\n      this.setState({ clickMessage: \"Sorry, that image has been clicked, you lose! Start clicking to play again.\" });\n      this.setState({ count: 0 });\n      this.state.friends.map(newArray => newArray.id === id).clicked = false;\n      this.state.friends.forEach(function(friendsArray){\n        friendsArray.clicked = false;\n        console.log(friendsArray);\n      })\n      console.log(this.state.friends)\n      this.setState({})\n      } else {\n      // ...randomize the array\n      const friends = this.state.friends.sort(() => Math.random() - 0.5 );\n      // change the clicked image's clicked value to true\n      this.state.friends.find(newArray => newArray.id === id).clicked = true;\n      // update the state of friends\n      this.setState({ friends });\n      // update the state of the count\n      this.setState({ count: this.state.count + 1 });\n        if (this.state.count === parseInt(11)) {\n          this.setState({ clickMessage: \"You win!\" })\n          this.setState({ count: 0 })\n          this.setState({})\n          this.state.friends.forEach(function(friendsArray){\n            friendsArray.clicked = false;\n            console.log(friendsArray);\n          })\n          console.log(this.state.friends);\n\n        }\n    }\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n        <Counter>Score: {this.state.count}</Counter>\n        <Message>{this.state.clickMessage}</Message>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickMessage={this.clickMessage}\n            clickImage={this.clickImage}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}